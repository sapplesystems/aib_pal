<?php
//
// login.php
//

// FUNCTIONAL INCLUDES

include('config/aib.php');
include("include/folder_tree.php");
include('include/aib_util.php');

// #########
// MAIN CODE
// #########

	// Check session

	$CheckResult = aib_check_session();
	if ($CheckResult[0] != "OK")
	{
		$ErrorText = bin2hex($CheckResult[1]);
		header("Location: /login_error.php?v=$ErrorText");
		exit(0);
	}

	// Get user info from session data

	$SessionInfo = $CheckResult[1];
	$UserInfo = aib_get_user_info($SessionInfo["login"]);
	if ($UserInfo[0] != "OK")
	{
		$ErrorText = bin2hex("Cannot retrieve user profile");
		header("Location: /login_error.php?v=$ErrorText");
		exit(0);
	}

	// Make sure this is an admin

	$UserRecord = $UserInfo[1];
	switch($UserRecord["user_type"])
	{
		case FTREE_USER_TYPE_ROOT:
			break;

		default:
			$ErrorText = bin2hex("Unauthorized operation");
			header("Location: /login_error.php?v=$ErrorText");
			exit(0);
	}

	$FormData = aib_get_form_data();
	aib_get_nav_info($FormData);
	aib_update_nav_info("src","archivegroups.php");
	aib_update_nav_info("src_title","Client Management");
	$NavString = aib_get_nav_string();
	$OpCode = aib_get_with_default($FormData,"opcode",false);

	// Set up display data array

	$DisplayData = array(
		"page_title" => "SYSTEM ADMINISTRATOR: MANAGE CLIENTS",
		"popup_list" => array(),
	);

// Include menu data

include("template/top_menu_data.php");

	// Add some items to the base menus

include("template/top_menu_admin_data.php");
		$DisplayData["current_menu"] = "Manage Clients";


	// Set up initialization JavaScript based on the opcode

	$TotalListPages = 0;
	$PreloadBuffer = "";
	switch($OpCode)
	{
		// If viewing a list, set up code which generates initialization signal to load list with first page of data.
		// General operation is:
		//
		//	1) Generate preload code.  Page count is preset to whatever value reflects the initial page count without searches.
		//	2) Generate list division container
		//	3) Generate list script code for base of page; this handles paging buttons and search requests
		//	4) AJAX call made to service, which calculates the updated page count and generates the HTML for the
		//	   division based on current operation (search, list) and the selected page number.
		//

		case "list":
		case false:
		default:
			if (aib_open_db() != false)
			{
				$ArchivesFolderID = ftree_get_object_by_path($GLOBALS["aib_db"],FTREE_OBJECT_TYPE_FOLDER.":ARCHIVE GROUP");
				$ArchiveList = ftree_list_child_objects($GLOBALS["aib_db"],$ArchivesFolderID,false,false,FTREE_OBJECT_TYPE_FOLDER);
				if ($ArchiveList != false)
				{
					$TotalListPages = intval((count($ArchiveList) / intval(AIB_DEFAULT_ITEMS_PER_PAGE)) + 1);
				}
				else
				{
					$TotalListPages = 0;
				}

				aib_close_db();

				// Generate pre-load functions for HTML page header

				$PreloadBuffer = aib_generate_list_preload("aibarchives",$TotalListPages);

				// Add preload functions to header script area

				if (isset($DisplayData["head_script"]) == false)
				{
					$DisplayData["head_script"] = $PreloadBuffer;
				}
				else
				{
					$DisplayData["head_script"] .= $PreloadBuffer;
				}

				break;
			}

			break;
	}

	// Set up footer script information

	$FooterScriptLines = array();


	$OutBuffer = array();
	$StatusMessage = false;
	$ErrorMessage = false;

	// Process based on opcode

	switch($OpCode)
	{
		case "list":
		case false:
		default:

			// Generate list table.  First, create div to hold table data.

			$OutBuffer[] = "<div name='aibarchives' id='aibarchives-data-div' style='aib-generic-list-div'>";

			// Show "add archive group" link

			$LocalSourceKey = aib_get_with_default($FormData,"srckey","");
			$LocalSearchValue = aib_get_with_default($FormData,"searchval","");
			$LocalSourceMode = aib_get_with_default($FormData,"srcmode","");
			$LocalSourcePageNumber = aib_get_with_default($FormData,"srcpn","");
			$TargetFields = join("&",array("src=fields","srckey=$LocalSourceKey","searchval=$LocalSearchValue","srcmode=$LocalSourceMode","srcpn=$LocalSourcePageNumber"));
			$TitleRow = "<tr class='aib-folder-type-row'>";
			$TitleCell = "<td class='aib-folder-type-cell'>";
			$MenuCell = "<td class='aib-folder-menu-cell'>";
			$MenuCell .= "<a href='/archivegroup_form.php?opcode=add&$TargetFields' class='aib-folder-menu-link'>Create Client</a>";
			$TitleCell .= "</td>";
			$TitleRow .= $TitleCell;
			$MenuCell .= "</td>";
			$TitleRow .= $MenuCell;
			$TitleRow .= "</td></tr>";

			// Generate frame of the list without data.  This also sets up bindings for button events, etc..
			// The content will be generated by an AJAX request which generates the lines using the
			// aib_generate_generic_list_inner_html() function.

			$ListParam = array();
			$ListParam["columns"] = array(
				"item_title" => "Client Title",
				".archive_group_code" => "Client Code",
				".op" => "",
				);
			$ListParam["searchable"] = array(
				"item_title" => "Client Title",
				".archive_group_code" => "Client Code",
				);
			$ListParam["pagecount"] = 1;
			$ListParam["pagenum"] = 1;
			$ListParam["pagesize"] = AIB_DEFAULT_ITEMS_PER_PAGE;
			$ListParam["extra_title_rows"][] = $TitleRow;
			$OutBuffer[] = aib_generate_generic_list_frame_html("aibarchives",$ListParam);


			// End of table data area

			$OutBuffer[] = "</div>";

			// Generate script and any html required to make table interactive.

			$Spec = array(
				"opcode" => "larg",
				"rows" => AIB_DEFAULT_ITEMS_PER_PAGE,
				"total_pages" => $TotalListPages,
				"url" => "/services/air.php",
				"aibnav" => $NavString,
				);

			$ListData = aib_generate_scroll_table_handler(AIB_SUPERUSER,"aibarchives",$Spec);
			$FooterScriptLines[] = $ListData["script"];
			break;
	}

	$DisplayData["content"] = join("\n",$OutBuffer);

	// Add any footer script

	$DisplayData["footer_lines"] = join("\n",$FooterScriptLines);
include('template/common_list.php');
	exit(0);
?>
